// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azure/operation-cache-controller/internal/controller (interfaces: OperationAdapterInterface)
//
// Generated by this command:
//
//	mockgen -destination=./mocks/mock_operation_adapter.go -package=mocks github.com/Azure/operation-cache-controller/internal/controller OperationAdapterInterface
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	reconciler "github.com/Azure/operation-cache-controller/internal/utils/reconciler"
	gomock "go.uber.org/mock/gomock"
)

// MockOperationAdapterInterface is a mock of OperationAdapterInterface interface.
type MockOperationAdapterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOperationAdapterInterfaceMockRecorder
	isgomock struct{}
}

// MockOperationAdapterInterfaceMockRecorder is the mock recorder for MockOperationAdapterInterface.
type MockOperationAdapterInterfaceMockRecorder struct {
	mock *MockOperationAdapterInterface
}

// NewMockOperationAdapterInterface creates a new mock instance.
func NewMockOperationAdapterInterface(ctrl *gomock.Controller) *MockOperationAdapterInterface {
	mock := &MockOperationAdapterInterface{ctrl: ctrl}
	mock.recorder = &MockOperationAdapterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOperationAdapterInterface) EXPECT() *MockOperationAdapterInterfaceMockRecorder {
	return m.recorder
}

// EnsureAllAppsAreDeleted mocks base method.
func (m *MockOperationAdapterInterface) EnsureAllAppsAreDeleted(ctx context.Context) (reconciler.OperationResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureAllAppsAreDeleted", ctx)
	ret0, _ := ret[0].(reconciler.OperationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnsureAllAppsAreDeleted indicates an expected call of EnsureAllAppsAreDeleted.
func (mr *MockOperationAdapterInterfaceMockRecorder) EnsureAllAppsAreDeleted(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureAllAppsAreDeleted", reflect.TypeOf((*MockOperationAdapterInterface)(nil).EnsureAllAppsAreDeleted), ctx)
}

// EnsureAllAppsAreReady mocks base method.
func (m *MockOperationAdapterInterface) EnsureAllAppsAreReady(ctx context.Context) (reconciler.OperationResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureAllAppsAreReady", ctx)
	ret0, _ := ret[0].(reconciler.OperationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnsureAllAppsAreReady indicates an expected call of EnsureAllAppsAreReady.
func (mr *MockOperationAdapterInterfaceMockRecorder) EnsureAllAppsAreReady(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureAllAppsAreReady", reflect.TypeOf((*MockOperationAdapterInterface)(nil).EnsureAllAppsAreReady), ctx)
}

// EnsureFinalizer mocks base method.
func (m *MockOperationAdapterInterface) EnsureFinalizer(ctx context.Context) (reconciler.OperationResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureFinalizer", ctx)
	ret0, _ := ret[0].(reconciler.OperationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnsureFinalizer indicates an expected call of EnsureFinalizer.
func (mr *MockOperationAdapterInterfaceMockRecorder) EnsureFinalizer(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureFinalizer", reflect.TypeOf((*MockOperationAdapterInterface)(nil).EnsureFinalizer), ctx)
}

// EnsureFinalizerRemoved mocks base method.
func (m *MockOperationAdapterInterface) EnsureFinalizerRemoved(ctx context.Context) (reconciler.OperationResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureFinalizerRemoved", ctx)
	ret0, _ := ret[0].(reconciler.OperationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnsureFinalizerRemoved indicates an expected call of EnsureFinalizerRemoved.
func (mr *MockOperationAdapterInterfaceMockRecorder) EnsureFinalizerRemoved(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureFinalizerRemoved", reflect.TypeOf((*MockOperationAdapterInterface)(nil).EnsureFinalizerRemoved), ctx)
}

// EnsureNotExpired mocks base method.
func (m *MockOperationAdapterInterface) EnsureNotExpired(ctx context.Context) (reconciler.OperationResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsureNotExpired", ctx)
	ret0, _ := ret[0].(reconciler.OperationResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnsureNotExpired indicates an expected call of EnsureNotExpired.
func (mr *MockOperationAdapterInterfaceMockRecorder) EnsureNotExpired(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsureNotExpired", reflect.TypeOf((*MockOperationAdapterInterface)(nil).EnsureNotExpired), ctx)
}
